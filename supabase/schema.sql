-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.contacts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  customer_id uuid NOT NULL,
  name text NOT NULL,
  email text,
  phone text,
  position text,
  is_primary boolean DEFAULT false,
  notes text,
  CONSTRAINT contacts_pkey PRIMARY KEY (id),
  CONSTRAINT contacts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  name text NOT NULL,
  email text NOT NULL UNIQUE,
  company text,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'pending'::text])),
  date_added date NOT NULL DEFAULT CURRENT_DATE,
  avatar_seed text,
  billing_address text,
  shipping_address text,
  tax_code text UNIQUE,
  CONSTRAINT customers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.employees (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  name text NOT NULL,
  email text NOT NULL UNIQUE,
  title text,
  department text,
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'terminated'::text])),
  role USER-DEFINED NOT NULL DEFAULT 'engineer'::user_role,
  hourly_rate bigint DEFAULT 0,
  hire_date date DEFAULT CURRENT_DATE,
  password_hash text NOT NULL,
  CONSTRAINT employees_pkey PRIMARY KEY (id)
);
CREATE TABLE public.inventory_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  product_id uuid NOT NULL,
  change_type text NOT NULL CHECK (change_type = ANY (ARRAY['purchase_received'::text, 'sale'::text, 'return'::text, 'adjustment'::text])),
  quantity_change integer NOT NULL,
  new_stock_level integer NOT NULL,
  reference_id uuid,
  notes text,
  recorded_by_employee_id uuid,
  CONSTRAINT inventory_logs_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_logs_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT inventory_logs_employee_id_fkey FOREIGN KEY (recorded_by_employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  invoice_number text NOT NULL UNIQUE,
  customer_id uuid,
  order_id uuid,
  status USER-DEFINED NOT NULL DEFAULT 'draft'::invoice_status,
  issue_date date NOT NULL DEFAULT CURRENT_DATE,
  due_date date NOT NULL DEFAULT (CURRENT_DATE + '30 days'::interval),
  subtotal bigint NOT NULL DEFAULT 0,
  vat_rate numeric NOT NULL DEFAULT 0.1,
  vat_amount bigint NOT NULL DEFAULT 0,
  shipping_fee bigint NOT NULL DEFAULT 0,
  total_amount bigint NOT NULL DEFAULT 0,
  paid_amount bigint DEFAULT 0,
  notes text,
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT invoices_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  order_id uuid NOT NULL,
  product_id uuid,
  custom_description text,
  quantity integer NOT NULL CHECK (quantity > 0),
  price_perunit bigint NOT NULL,
  total_price bigint DEFAULT 0,
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  order_number text NOT NULL UNIQUE,
  customer_id uuid,
  quote_id uuid,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::order_type,
  order_date date NOT NULL DEFAULT CURRENT_DATE,
  required_delivery_date date,
  subtotal bigint NOT NULL DEFAULT 0,
  vat_rate numeric NOT NULL DEFAULT 0.1,
  vat_amount bigint NOT NULL DEFAULT 0,
  shipping_fee bigint NOT NULL DEFAULT 0,
  total_amount bigint NOT NULL DEFAULT 0,
  shipping_address text,
  tracking_number text,
  shipping_provider text,
  notes text,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT orders_quote_id_fkey FOREIGN KEY (quote_id) REFERENCES public.quotes(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  invoice_id uuid NOT NULL,
  payment_date date NOT NULL DEFAULT CURRENT_DATE,
  amount_paid bigint NOT NULL,
  payment_method text NOT NULL CHECK (payment_method = ANY (ARRAY['cash'::text, 'bank_transfer'::text, 'credit_card'::text, 'check'::text])),
  reference_code text,
  notes text,
  payment_status USER-DEFINED DEFAULT 'pending'::payment_status,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  name text NOT NULL,
  description text,
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'discontinued'::text])),
  price bigint NOT NULL,
  cost bigint DEFAULT 0,
  total_sales integer DEFAULT 0,
  type USER-DEFINED NOT NULL DEFAULT 'PHYSICAL'::product_type,
  sku text UNIQUE,
  stock integer DEFAULT 0,
  supplier_id uuid,
  warranty_period_months integer DEFAULT 12,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id)
);
CREATE TABLE public.project_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  project_id uuid NOT NULL,
  employee_id uuid NOT NULL,
  role text DEFAULT 'member'::text,
  CONSTRAINT project_members_pkey PRIMARY KEY (id),
  CONSTRAINT project_members_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_members_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  title text NOT NULL,
  description text,
  status text NOT NULL DEFAULT 'planning'::text CHECK (status = ANY (ARRAY['planning'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])),
  progress integer DEFAULT 0 CHECK (progress >= 0 AND progress <= 100),
  customer_id uuid,
  start_date date,
  end_date date,
  budget bigint DEFAULT 0,
  project_manager_id uuid,
  billable_rate bigint DEFAULT 0,
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT projects_project_manager_id_fkey FOREIGN KEY (project_manager_id) REFERENCES public.employees(id)
);
CREATE TABLE public.purchaseorder_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  purchase_order_id uuid NOT NULL,
  product_id uuid,
  supplier_product_code text,
  quantity integer NOT NULL CHECK (quantity > 0),
  price_perunit bigint NOT NULL,
  total_price bigint DEFAULT 0,
  CONSTRAINT purchaseorder_items_pkey PRIMARY KEY (id),
  CONSTRAINT purchaseorder_items_purchase_order_id_fkey FOREIGN KEY (purchase_order_id) REFERENCES public.purchaseorders(id),
  CONSTRAINT purchaseorder_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.purchaseorders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  po_number text NOT NULL UNIQUE,
  supplier_id uuid,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'ordered'::text, 'received'::text, 'cancelled'::text])),
  order_date date NOT NULL DEFAULT CURRENT_DATE,
  expected_delivery_date date,
  subtotal bigint NOT NULL DEFAULT 0,
  vat_rate numeric NOT NULL DEFAULT 0.1,
  vat_amount bigint NOT NULL DEFAULT 0,
  shipping_fee bigint NOT NULL DEFAULT 0,
  total_amount bigint NOT NULL DEFAULT 0,
  notes text,
  CONSTRAINT purchaseorders_pkey PRIMARY KEY (id),
  CONSTRAINT purchaseorders_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id)
);
CREATE TABLE public.quote_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  quote_id uuid NOT NULL,
  product_id uuid,
  custom_description text,
  quantity integer NOT NULL CHECK (quantity > 0),
  price_perunit bigint NOT NULL,
  discount_percentage numeric DEFAULT 0,
  total_price bigint DEFAULT 0,
  CONSTRAINT quote_items_pkey PRIMARY KEY (id),
  CONSTRAINT quote_items_quote_id_fkey FOREIGN KEY (quote_id) REFERENCES public.quotes(id),
  CONSTRAINT quote_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.quotes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  quote_number text NOT NULL UNIQUE,
  customer_id uuid,
  status text NOT NULL CHECK (status = ANY (ARRAY['draft'::text, 'sent'::text, 'accepted'::text, 'rejected'::text, 'expired'::text])),
  issue_date date NOT NULL DEFAULT CURRENT_DATE,
  expiry_date date,
  valid_for_days integer DEFAULT 30,
  subtotal bigint NOT NULL DEFAULT 0,
  vat_rate numeric NOT NULL DEFAULT 0.1,
  vat_amount bigint NOT NULL DEFAULT 0,
  shipping_fee bigint NOT NULL DEFAULT 0,
  total_amount bigint NOT NULL DEFAULT 0,
  notes text,
  CONSTRAINT quotes_pkey PRIMARY KEY (id),
  CONSTRAINT quotes_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  name text NOT NULL,
  contact_person text,
  email text UNIQUE,
  phone text,
  address text,
  tax_code text UNIQUE,
  CONSTRAINT suppliers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  task_code text UNIQUE,
  title text NOT NULL,
  description text,
  status text NOT NULL DEFAULT 'todo'::text CHECK (status = ANY (ARRAY['todo'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])),
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'urgent'::text])),
  due_date date,
  assignee_id uuid,
  project_id uuid,
  estimated_hours integer DEFAULT 0,
  completed_hours integer DEFAULT 0,
  billable boolean DEFAULT true,
  CONSTRAINT tasks_pkey PRIMARY KEY (id),
  CONSTRAINT tasks_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES public.employees(id),
  CONSTRAINT tasks_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.timesheets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  stworzone timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  task_id uuid,
  employee_id uuid NOT NULL,
  hours_worked numeric NOT NULL CHECK (hours_worked > 0::numeric),
  work_date date NOT NULL DEFAULT CURRENT_DATE,
  description text,
  is_billable boolean DEFAULT true,
  billing_rate bigint DEFAULT 0,
  CONSTRAINT timesheets_pkey PRIMARY KEY (id),
  CONSTRAINT timesheets_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.tasks(id),
  CONSTRAINT timesheets_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employees(id)
);
CREATE TABLE public.warranties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  order_item_id uuid NOT NULL,
  start_date date NOT NULL DEFAULT CURRENT_DATE,
  end_date date NOT NULL,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'expired'::text, 'void'::text])),
  notes text,
  claim_count integer DEFAULT 0,
  CONSTRAINT warranties_pkey PRIMARY KEY (id),
  CONSTRAINT warranties_order_item_id_fkey FOREIGN KEY (order_item_id) REFERENCES public.order_items(id)
);